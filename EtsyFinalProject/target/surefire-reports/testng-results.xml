<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="TestNG.HybridLoginTest" duration-ms="52536" started-at="2020-06-27T20:04:18Z" finished-at="2020-06-27T20:05:10Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="52536" started-at="2020-06-27T20:04:18Z" finished-at="2020-06-27T20:05:10Z">
      <class name="TestNG.HybridLoginTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="setUp" is-config="true" duration-ms="164" started-at="2020-06-27T20:04:18Z" finished-at="2020-06-27T20:04:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="AccountTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="AccountTest" duration-ms="15375" started-at="2020-06-27T20:04:19Z" data-provider="hybridData" finished-at="2020-06-27T20:04:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginTest.xlsx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CorrectLogin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccountTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="tearDown" is-config="true" duration-ms="3400" started-at="2020-06-27T20:04:34Z" finished-at="2020-06-27T20:04:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccountTest status=SUCCESS method=HybridLoginTest.AccountTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.HybridLoginTest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="AccountTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="AccountTest" duration-ms="10093" started-at="2020-06-27T20:04:37Z" data-provider="hybridData" finished-at="2020-06-27T20:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginTest.xlsx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[WrongPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccountTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="tearDown" is-config="true" duration-ms="974" started-at="2020-06-27T20:04:48Z" finished-at="2020-06-27T20:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccountTest status=SUCCESS method=HybridLoginTest.AccountTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.HybridLoginTest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="AccountTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="AccountTest" duration-ms="9869" started-at="2020-06-27T20:04:48Z" data-provider="hybridData" finished-at="2020-06-27T20:04:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginTest.xlsx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[InvalidEmail]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccountTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="tearDown" is-config="true" duration-ms="1031" started-at="2020-06-27T20:04:58Z" finished-at="2020-06-27T20:04:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccountTest status=SUCCESS method=HybridLoginTest.AccountTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.HybridLoginTest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="AccountTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="AccountTest" duration-ms="9111" started-at="2020-06-27T20:04:59Z" data-provider="hybridData" finished-at="2020-06-27T20:05:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[LoginTest.xlsx]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[BlankInput]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.fail(Assert.java:103)
at etsy.engine.WebOperation.perform(WebOperation.java:105)
at TestNG.HybridLoginTest.AccountTest(HybridLoginTest.java:81)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:109)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AccountTest -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:TestNG.HybridLoginTest@13969fbe]" name="tearDown" is-config="true" duration-ms="1912" started-at="2020-06-27T20:05:09Z" finished-at="2020-06-27T20:05:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AccountTest status=FAILURE method=HybridLoginTest.AccountTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.HybridLoginTest@13969fbe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestNG.HybridLoginTest -->
    </test> <!-- Command line test -->
  </suite> <!-- TestNG.HybridLoginTest -->
</testng-results>
